"""Initial migration

Revision ID: 55857317201e
Revises: 223e3260e8c0
Create Date: 2025-09-12 15:30:21.010663

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '55857317201e'
down_revision: Union[str, Sequence[str], None] = '223e3260e8c0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_comment'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_message'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_title'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_messages_chat_id'), table_name='messages_chat')
    op.drop_table('messages_chat')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_preference'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_events_category'), table_name='events')
    op.drop_index(op.f('ix_events_date'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_organizer_id'), table_name='events')
    op.drop_index(op.f('ix_events_title'), table_name='events')
    op.drop_index(op.f('ix_events_venue'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_Likes_id'), table_name='Likes')
    op.drop_table('Likes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('Likes_event_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('Likes_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('Likes_pkey')),
    sa.UniqueConstraint('user_id', 'event_id', name=op.f('unique_like'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_Likes_id'), 'Likes', ['id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('events_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('venue', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('ticket_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('capacity_max', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name='events_organizer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_events_venue'), 'events', ['venue'], unique=False)
    op.create_index(op.f('ix_events_title'), 'events', ['title'], unique=True)
    op.create_index(op.f('ix_events_organizer_id'), 'events', ['organizer_id'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_date'), 'events', ['date'], unique=False)
    op.create_index(op.f('ix_events_category'), 'events', ['category'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_activity', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_preferences_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_preferences_pkey'))
    )
    op.create_index(op.f('ix_user_preferences_preference'), 'user_preferences', ['preference'], unique=False)
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('messages_chat',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('intent', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('messages_chat_event_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('messages_chat_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('messages_chat_pkey'))
    )
    op.create_index(op.f('ix_messages_chat_id'), 'messages_chat', ['id'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('purchase_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('tickets_event_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('tickets_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tickets_pkey'))
    )
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.create_index(op.f('ix_notifications_title'), 'notifications', ['title'], unique=False)
    op.create_index(op.f('ix_notifications_message'), 'notifications', ['message'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('reviews_event_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('reviews_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('reviews_pkey'))
    )
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    op.create_index(op.f('ix_reviews_comment'), 'reviews', ['comment'], unique=False)
    # ### end Alembic commands ###
